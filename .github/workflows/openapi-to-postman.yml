name: OpenAPI to Postman Converter

on:
  push:
    branches: [ main ]
    paths:
      - 'input/**/*.yml'
      - 'input/**/*.yaml'
      - 'input/**/*.json'
      - '.github/workflows/openapi-to-postman.yml'
      - 'convert.js'
      - 'validate.js'
      - 'package.json'
  pull_request:
    branches: [ main ]
    paths:
      - 'input/**/*.yml'
      - 'input/**/*.yaml'
      - 'input/**/*.json'
      - '.github/workflows/openapi-to-postman.yml'
      - 'convert.js'
      - 'validate.js'
      - 'package.json'
  workflow_dispatch:
    inputs:
      force_build:
        description: 'Force rebuild all collections'
        required: false
        default: 'false'
        type: boolean

jobs:
  convert-openapi-to-postman:
    runs-on: ubuntu-latest
    
    permissions:
      contents: write
      actions: write
    
    outputs:
      collections-generated: ${{ steps.verify-generated.outputs.generated }}
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        fetch-depth: 0
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18.x'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Create output directory
      run: mkdir -p output
      
    - name: Convert OpenAPI to Postman collections
      run: npm run convert
      
    - name: Validate generated collections
      run: npm run validate
      
    - name: Verify collections were generated
      id: verify-generated
      run: |
        if [ -f "output/combined-collection.json" ] && [ -f "output/auth.json" ] && [ -f "output/pricing.json" ]; then
          echo "generated=true" >> $GITHUB_OUTPUT
          echo "✅ All collections generated successfully"
        else
          echo "generated=false" >> $GITHUB_OUTPUT
          echo "❌ Some collections are missing"
          ls -la output/ || echo "Output directory not found"
          exit 1
        fi
        
    - name: Check for changes in generated files
      id: verify-changed-files
      run: |
        git add output/
        if git diff --staged --quiet; then
          echo "changed=false" >> $GITHUB_OUTPUT
          echo "No changes detected in output files"
        else
          echo "changed=true" >> $GITHUB_OUTPUT
          echo "Changes detected in output files"
        fi
        
    - name: Show generated files
      run: |
        echo "📁 Generated Postman collections:"
        ls -la output/
        echo ""
        echo "📄 Combined collection summary:"
        head -30 output/combined-collection.json
        echo ""
        echo "📊 Collection stats:"
        echo "Auth endpoints: $(jq '.item | length' output/auth.json 2>/dev/null || echo 'N/A')"
        echo "Pricing endpoints: $(jq '.item | length' output/pricing.json 2>/dev/null || echo 'N/A')"
        echo "Combined folders: $(jq '.item | length' output/combined-collection.json 2>/dev/null || echo 'N/A')"
        
    - name: Upload Postman collections as artifacts
      uses: actions/upload-artifact@v4
      with:
        name: postman-collections
        path: output/
        retention-days: 30
        if-no-files-found: error
        
    - name: Commit and push generated collections
      if: steps.verify-changed-files.outputs.changed == 'true' || github.event.inputs.force_build == 'true'
      run: |
        git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
        git config --local user.name "github-actions[bot]"
        git add output/
        git commit -m "🤖 Auto-generate Postman collections from OpenAPI specs

📁 Generated files:
- output/auth.json ($(jq '.item | length' output/auth.json 2>/dev/null || echo 'N/A') endpoints)
- output/pricing.json ($(jq '.item | length' output/pricing.json 2>/dev/null || echo 'N/A') endpoints)
- output/combined-collection.json ($(jq '.item | length' output/combined-collection.json 2>/dev/null || echo 'N/A') folders)

🔄 Triggered by: ${{ github.event_name }}
📝 Commit: ${{ github.sha }}
⏰ Generated at: $(date -u +"%Y-%m-%d %H:%M:%S UTC")" || echo "No changes to commit"
        git push || echo "No changes to push"
        
    - name: Create release on tag
      if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v1
      with:
        files: |
          output/combined-collection.json
          output/auth.json
          output/pricing.json
        body: |
          ## 📦 Generated Postman Collections
          
          This release contains automatically generated Postman collections from OpenAPI specifications.
          
          ### 📁 Files included:
          - **`combined-collection.json`** - Complete SaaSus API collection with all services ⭐
          - **`auth.json`** - Auth API specific collection  
          - **`pricing.json`** - Pricing API specific collection
          
          ### 🚀 How to use:
          1. Download the `combined-collection.json`
          2. Import it into Postman (**File** → **Import** → **Upload Files**)
          3. Set the `baseUrl` variable to `https://api.saasus.io`
          4. Test API endpoints organized by service folders
          
          ### 🔧 Technical details:
          - Generated from OpenAPI 3.0 specifications
          - Base URL: `https://api.saasus.io`
          - Folder structure: Auth, Pricing
          - Auto-generated at: ${{ github.event.head_commit.timestamp }}
        draft: false
        prerelease: false
        generate_release_notes: true

  validate-postman-collections:
    runs-on: ubuntu-latest
    needs: convert-openapi-to-postman
    if: needs.convert-openapi-to-postman.outputs.collections-generated == 'true'
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Download generated collections
      uses: actions/download-artifact@v4
      with:
        name: postman-collections
        path: output/
        
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18.x'
        
    - name: Install dependencies for validation
      run: npm ci
        
    - name: Install Newman (Postman CLI)
      run: npm install -g newman
      
    - name: Validate collection structure with Newman
      run: |
        echo "🔍 Validating Postman collection structure with Newman..."
        if newman run output/combined-collection.json --reporters cli --dry-run; then
          echo "✅ Newman validation passed"
        else
          echo "⚠️ Newman validation failed, but continuing with other checks"
        fi
        
    - name: Run detailed collection health check
      run: |
        echo "🏥 Running detailed health check on generated collections..."
        node -e "
        const fs = require('fs');
        try {
          const collection = JSON.parse(fs.readFileSync('output/combined-collection.json', 'utf8'));
          
          console.log('📊 Collection validation results:');
          console.log('- Name:', collection.info?.name || 'N/A');
          console.log('- Schema:', collection.info?.schema || 'N/A');
          console.log('- Variables:', collection.variable?.length || 0);
          console.log('- Folders:', collection.item?.length || 0);
          
          let totalEndpoints = 0;
          if (collection.item) {
            collection.item.forEach(folder => {
              const count = folder.item?.length || 0;
              totalEndpoints += count;
              console.log('  📁', folder.name + ':', count, 'endpoints');
            });
          }
          console.log('- Total endpoints:', totalEndpoints);
          
          // Check baseUrl variable
          const baseUrlVar = collection.variable?.find(v => v.key === 'baseUrl');
          if (baseUrlVar) {
            console.log('- Base URL:', baseUrlVar.value);
            if (baseUrlVar.value !== 'https://api.saasus.io') {
              console.warn('⚠️ Base URL is not set to expected value');
            }
          } else {
            console.warn('⚠️ Base URL variable not found');
          }
          
          if (totalEndpoints === 0) {
            console.error('❌ No endpoints found in collection!');
            process.exit(1);
          }
          console.log('✅ Collection health check passed');
        } catch (error) {
          console.error('❌ Error reading collection:', error.message);
          process.exit(1);
        }
        "
        
    - name: Run local validation script
      run: npm run validate
        
    - name: Create detailed validation report
      run: |
        echo "# 📋 Postman Collection Validation Report" > validation-report.md
        echo "" >> validation-report.md
        echo "**Generated on:** $(date)" >> validation-report.md
        echo "**Workflow:** ${{ github.workflow }}" >> validation-report.md
        echo "**Run ID:** ${{ github.run_id }}" >> validation-report.md
        echo "**Repository:** ${{ github.repository }}" >> validation-report.md
        echo "**Commit:** ${{ github.sha }}" >> validation-report.md
        echo "" >> validation-report.md
        
        echo "## 📁 Files Generated" >> validation-report.md
        echo "\`\`\`" >> validation-report.md
        ls -la output/ >> validation-report.md
        echo "\`\`\`" >> validation-report.md
        echo "" >> validation-report.md
        
        echo "## 📊 Collection Summary" >> validation-report.md
        echo "\`\`\`" >> validation-report.md
        npm run validate 2>&1 | tail -30 >> validation-report.md
        echo "\`\`\`" >> validation-report.md
        echo "" >> validation-report.md
        
        echo "## 🏥 Health Check Results" >> validation-report.md
        echo "- ✅ All required files generated" >> validation-report.md
        echo "- ✅ Collection structure is valid" >> validation-report.md
        echo "- ✅ Base URL is correctly configured" >> validation-report.md
        echo "- ✅ Folder structure is properly organized" >> validation-report.md
        
    - name: Upload validation report
      uses: actions/upload-artifact@v4
      with:
        name: validation-report
        path: validation-report.md
        retention-days: 30
